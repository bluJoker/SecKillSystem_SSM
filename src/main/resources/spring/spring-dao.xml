<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 配置整合mybatis过程 -->
    <!-- 1：配置数据库相关参数 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 2：数据库连接池 -->
    <bean id="datasource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${url}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>

        <!-- 配置c3p0连接池私有属性 -->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!--关闭连接后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!--获取连接超时时间-->
        <property name="checkoutTimeout" value="5000"/>
        <!--当获取连接失败重试次数-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!--约定大于配置-->
    <!-- 3：配置sqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="datasource"></property>

        <!--指定Mybatis的总装配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>

        <!--扫描entity包 使用别名-->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>

        <!--扫描式加载SQL映射文件，不需要在mybatis-config.xml中分别组装所有映射文件-->
        <!--SqlSessionFactoryBean将扫描tk/mybatis/simple/mapper类路径并加载所有以.xml为后缀的映射文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!-- 4：配置扫描DAO接口包，动态实现Dao接口，注入到Spring容器中 -->
    <!--mybatis-spring提供一个转换器MapperScannerConfigurer-->
    <!--它可以将映射接口直接转换为Spring容器中的Bean，这样就可以在Service中注入映射接口的Bean了-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>

        <!--MapperScannerConfigurer将扫描basePackage所指定的包下的所有接口类(包括子包)-->
        <!--如果它们在SQL映射文件中定义过，则将为它们动态定义为一个Spring Bean-->
        <!--这样就可以在Service中直接注入映射接口的Bean了-->
        <property name="basePackage" value="org.seckill.dao"></property>
    </bean>

    <!-- 注入RedisDao -->
    <bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
        <constructor-arg index="0" value="localhost"></constructor-arg>
        <constructor-arg index="1" value="6379"></constructor-arg>
    </bean>
</beans>